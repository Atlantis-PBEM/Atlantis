// @ts-ignore -- The Color object will be there at runtime
import Color from 'color'
// @ts-ignore -- This file is generated by the game engine
import hexdata from './hexmap.json'
import { Point, DoubledCoord, Layout } from './hex'

const canvas = document.getElementById('map') as HTMLCanvasElement;
// This is just forcing typescript below to not believe we could have null
// here.  If we have a null here we have other issues.
const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;

type Region = typeof hexdata["surface"][0];

const taiga = Color('#4ba666');
const jungle = Color('#177832');
const grassland = Color('#91e069');
const desert = Color('#f0d735');

const TERRAIN = {
  'ocean': '#2b65ec',
  'plain': '#fff380',
  'forest': '#228B22',
  'mountain': '#704214',
  'swamp': '#667c26',
  'jungle': '#254117',
  'desert': '#c58917',
  'tundra': '#c9dfec',
  'volcano': '#622f22',
  'lake': '#6698ff',
}

const CELL_SZ = 5
const MAP_W = 196
const MAP_H = 196
const MAP_GAP = 32

function drawHexMap(col: number, row: number, level: string) {
    const offsetX = col * (MAP_W * CELL_SZ + MAP_GAP) + 50;
    const offsetY = row * (MAP_H * CELL_SZ + MAP_GAP) + 50;

    const layout = new Layout(Layout.flat, new Point(CELL_SZ * 2, CELL_SZ * 2.25), new Point(offsetX, offsetY));

    for (const item of hexdata[level]) {
        const p = new DoubledCoord(item.x, item.y).qdoubledToCube();
        const points = layout.polygonCorners(p);

        ctx.fillStyle = TERRAIN[item.terrain] || 'red';
        ctx.beginPath();
        let first = true;
        for (const n of points) {
            if (first) ctx.moveTo(n.x, n.y); else ctx.lineTo(n.x, n.y);

            first = false;
        }
        ctx.closePath();
        ctx.fill();
    }
}

drawHexMap(0, 0, "surface");
drawHexMap(0, 1, "underworld1");
